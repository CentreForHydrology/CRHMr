% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributeMean.R
\name{distributeMean}
\alias{distributeMean}
\title{Distribute mean values}
\usage{
distributeMean(obs, obsCols = "all", timeStep = 0, maxLength = 5,
  quiet = TRUE, logfile = "")
}
\arguments{
\item{obs}{Required. The \pkg{CRHMr} data frame of obs values.}

\item{obsCols}{Optional. A vector containing the columns to be imputed in the obs data frame, not including the datetime. The default \option{all} specifies all columns.}

\item{timeStep}{Required. The time step (in hours) for the interpolated values. This value must be smaller than the time step in the original time series.}

\item{maxLength}{Optional. The maximum gap length to be interpolated. Defaults to 5 time steps.}

\item{quiet}{Optional. Suppresses display of messages, except for errors. If you are calling this function in an \R script, you will usually leave \code{quiet=TRUE} (i.e. the default). If you are working interactively, you will probably want to set \code{quiet=FALSE}.}

\item{logfile}{Optional. Name of the file to be used for logging the action. Normally not use}
}
\value{
If successful, returns a dataframe of the selected columns interpolated to the specified time step. If unsuccessful, returns \code{FALSE}.
}
\description{
Distributes mean values to a shorter time interval. The missing datetimes are inserted and then the values are repeated. This function is typically used to downscale obs values such as t, ea, and u.
}
\examples{
\dontrun{
hourly_vals <- distributeMean(vegreville, c(1,2,3), timeStep = 1)}
}
\seealso{
\code{\link{distributeInst}}
}
\author{
Kevin Shook
}
