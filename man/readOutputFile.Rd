% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readOutputFile.R
\name{readOutputFile}
\alias{readOutputFile}
\title{Reads CRHM model output into a data frame}
\usage{
readOutputFile(outputFile, timezone = "", quiet = TRUE, logfile = "")
}
\arguments{
\item{outputFile}{Required. The name of the CRHM output file to be read in.}

\item{timezone}{Required. The name of the timezone of the data as a character string. This should be the timezone of your data, but omitting daylight savings time. Note that the timezone code is specific to your OS. To avoid problems, you should use a timezone without daylight savings time. Under Linux, you can use \option{CST} and \option{MST} for Central Standard or Mountain Standard time, respectively. Under Windows or OSX, you can use \option{etc/GMT+6} or \option{etc/GMT+7} for Central Standard and Mountain Standard time. DO NOT use \option{America/Regina} as the time zone, as it includes historical changes between standard and daylight savings time.}

\item{quiet}{Optional. Suppresses display of messages, except for errors. If you are calling this function in an \R script, you will usually leave \code{quiet=TRUE} (i.e. the default). If you are working interactively, you will probably want to set \code{quiet=FALSE}.}

\item{logfile}{Optional. Name of the file to be used for logging the action. Normally not used.}
}
\value{
If successful, returns a \pkg{CRHMr} data frame. If unsuccessful, returns the value \code{FALSE}.
}
\description{
Reads a file containing output from a CRHM model into a \pkg{CRHMr} data frame. Note that because of the way that \R reads in files, the variable names will have appended periods, e.g. \code{t.1}. This version reads in both old CRHM output (without units) and new CRHM output which contains the variable units in the second line.
}
\examples{
\dontrun{
stoon <- readOutputFile('CRHM_output_1.txt', 'etc/GMT+6')}
}
\seealso{
\code{\link{readExportFile}} \code{\link{readObsFile}} \code{\link{readOutputUnits}}
}
\author{
Kevin Shook
}
